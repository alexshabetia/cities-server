openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Cities
servers:
  - url: http://localhost:8080/
paths:
  /city:
    get:
      summary: List all cities
      operationId: getAllCitiesByOptionalName
      tags:
        - city
      x-spring-paginated: true
      parameters:
        - name: name
          in: query
          description: Specifies the name of city to search
          schema:
            type: string
      responses:
        '200':
          description: A paged array of cities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitiesPageDto"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /city/{uuid}:
    put:
      description: Edit city
      operationId: updateCity
      tags:
        - city
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CityDto"
      responses:
        '200':
          description: Successfully edited the city
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CityDto"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: City with given uuid not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    CityDto:
      type: object
      required:
        - name
        - photo
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        photo:
          type: string
          pattern: '^(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})$'
    CitiesPageDto:
      type: object
      properties:
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        cities:
          $ref: "#/components/schemas/Cities"
    Cities:
      type: array
      items:
        $ref: "#/components/schemas/CityDto"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string