plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.openapi.generator" version "6.5.0"
    id 'application'
}

group = 'com.alexshabetia.cities'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.swagger.core.v3:swagger-core:2.2.9'
    implementation 'org.flywaydb:flyway-core:9.16.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql:42.6.0'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'
}

application {
    mainClass = 'com.alexshabetia.cities.Application'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/cities-api-spec.yml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.alexshabetia.cities.controller"
    modelPackage = "com.alexshabetia.cities.controller.dto"
    configOptions = [
            dateLibrary                         : "java8",
            interfaceOnly                       : "true",
            openApiNullable                     : "false",
            skipDefaultInterface                : "true",
            useSpringBoot3                      : "true",
            additionalModelTypeAnnotations      : "@lombok.Builder; @lombok.NoArgsConstructor; @lombok.AllArgsConstructor",
            generatedConstructorWithRequiredArgs: "false"
    ]
}

sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/src/main/java")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}

compileJava.dependsOn tasks.named("openApiGenerate")
